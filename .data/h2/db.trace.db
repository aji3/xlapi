2017-04-29 00:08:18 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: SQLステートメントに文法エラーがあります "SELECT
        ORDERID, CUSTOMERID, ORDERDATETIME, TOTALPRICE  
        FROM WEBSHOP.ORDER[*] 
        WHERE
            1 = 1 "; 期待されるステートメント "identifier"
Syntax error in SQL statement "SELECT
        ORDERID, CUSTOMERID, ORDERDATETIME, TOTALPRICE  
        FROM WEBSHOP.ORDER[*] 
        WHERE
            1 = 1 "; expected "identifier"; SQL statement:
select
        orderId, customerId, orderDatetime, totalPrice  
        from WebShop.Order 
        where
            1 = 1 [42001-193]
2017-04-29 00:08:56 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: SQLステートメントに文法エラーがあります "SELECT
        ORDERID, CUSTOMERID, ORDERDATETIME, TOTALPRICE  
        FROM WEBSHOP.ORDER[*] 
        WHERE
            1 = 1 "; 期待されるステートメント "identifier"
Syntax error in SQL statement "SELECT
        ORDERID, CUSTOMERID, ORDERDATETIME, TOTALPRICE  
        FROM WEBSHOP.ORDER[*] 
        WHERE
            1 = 1 "; expected "identifier"; SQL statement:
select
        orderId, customerId, orderDatetime, totalPrice  
        from WebShop.Order 
        where
            1 = 1 [42001-193]
2017-04-29 00:09:28 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: SQLステートメントに文法エラーがあります "SELECT
        ORDERID, CUSTOMERID, ORDERDATETIME, TOTALPRICE  
        FROM WEBSHOP.ORDER[*] "; 期待されるステートメント "identifier"
Syntax error in SQL statement "SELECT
        ORDERID, CUSTOMERID, ORDERDATETIME, TOTALPRICE  
        FROM WEBSHOP.ORDER[*] "; expected "identifier"; SQL statement:
select
        orderId, customerId, orderDatetime, totalPrice  
        from WebShop.Order [42001-193]
2017-04-29 00:10:24 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: SQLステートメントに文法エラーがあります "SELECT
ORDERID, CUSTOMERID, ORDERDATETIME, TOTALPRICE
FROM WEBSHOP.ORDER[*] "; 期待されるステートメント "identifier"
Syntax error in SQL statement "SELECT
ORDERID, CUSTOMERID, ORDERDATETIME, TOTALPRICE
FROM WEBSHOP.ORDER[*] "; expected "identifier"; SQL statement:
select
orderId, customerId, orderDatetime, totalPrice
from WebShop.Order [42001-193]
2017-04-29 00:10:25 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: SQLステートメントに文法エラーがあります "SELECT
ORDERID, CUSTOMERID, ORDERDATETIME, TOTALPRICE
FROM WEBSHOP.ORDER[*] "; 期待されるステートメント "identifier"
Syntax error in SQL statement "SELECT
ORDERID, CUSTOMERID, ORDERDATETIME, TOTALPRICE
FROM WEBSHOP.ORDER[*] "; expected "identifier"; SQL statement:
select
orderId, customerId, orderDatetime, totalPrice
from WebShop.Order [42001-193]
2017-04-29 00:10:36 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: SQLステートメントに文法エラーがあります "SELECT
        ORDERID, CUSTOMERID, ORDERDATETIME, TOTALPRICE  
        FROM WEBSHOP.ORDER[*] 
        WHERE
            ORDERID = ? "; 期待されるステートメント "identifier"
Syntax error in SQL statement "SELECT
        ORDERID, CUSTOMERID, ORDERDATETIME, TOTALPRICE  
        FROM WEBSHOP.ORDER[*] 
        WHERE
            ORDERID = ? "; expected "identifier"; SQL statement:
select
        orderId, customerId, orderDatetime, totalPrice  
        from WebShop.Order 
        where
            orderId = ? [42001-193]
2017-04-29 00:11:53 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: SQLステートメントに文法エラーがあります "SELECT
        ORDERID, CUSTOMERID, ORDERDATETIME, TOTALPRICE  
        FROM WEBSHOP.ORDER[*] 
        WHERE
            ORDERID = ? "; 期待されるステートメント "identifier"
Syntax error in SQL statement "SELECT
        ORDERID, CUSTOMERID, ORDERDATETIME, TOTALPRICE  
        FROM WEBSHOP.ORDER[*] 
        WHERE
            ORDERID = ? "; expected "identifier"; SQL statement:
select
        orderId, customerId, orderDatetime, totalPrice  
        from WebShop.Order 
        where
            orderId = ? [42001-193]
2017-04-29 00:12:56 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: SQLステートメントに文法エラーがあります "SELECT
        ORDERID, CUSTOMERID, ORDERDATETIME, TOTALPRICE  
        FROM WEBSHOP.ORDER[*] 
        WHERE
            ORDERID = ? "; 期待されるステートメント "identifier"
Syntax error in SQL statement "SELECT
        ORDERID, CUSTOMERID, ORDERDATETIME, TOTALPRICE  
        FROM WEBSHOP.ORDER[*] 
        WHERE
            ORDERID = ? "; expected "identifier"; SQL statement:
select
        orderId, customerId, orderDatetime, totalPrice  
        from WebShop.Order 
        where
            orderId = ? [42001-193]
2017-04-29 00:12:57 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: SQLステートメントに文法エラーがあります "SELECT
        ORDERID, CUSTOMERID, ORDERDATETIME, TOTALPRICE  
        FROM WEBSHOP.ORDER[*] 
        WHERE
            ORDERID = ? "; 期待されるステートメント "identifier"
Syntax error in SQL statement "SELECT
        ORDERID, CUSTOMERID, ORDERDATETIME, TOTALPRICE  
        FROM WEBSHOP.ORDER[*] 
        WHERE
            ORDERID = ? "; expected "identifier"; SQL statement:
select
        orderId, customerId, orderDatetime, totalPrice  
        from WebShop.Order 
        where
            orderId = ? [42001-193]
2017-04-29 00:13:05 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: SQLステートメントに文法エラーがあります "SELECT * FROM WEBSHOP.ORDER[*] "; 期待されるステートメント "identifier"
Syntax error in SQL statement "SELECT * FROM WEBSHOP.ORDER[*] "; expected "identifier"; SQL statement:
select * from WebShop.Order [42001-193]
2017-04-29 00:13:14 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: SQLステートメントに文法エラーがあります "SELECT
        ORDERID, CUSTOMERID, ORDERDATETIME, TOTALPRICE  
        FROM WEBSHOP.ORDER[*] 
        WHERE
            ORDERID = ? "; 期待されるステートメント "identifier"
Syntax error in SQL statement "SELECT
        ORDERID, CUSTOMERID, ORDERDATETIME, TOTALPRICE  
        FROM WEBSHOP.ORDER[*] 
        WHERE
            ORDERID = ? "; expected "identifier"; SQL statement:
select
        orderId, customerId, orderDatetime, totalPrice  
        from WebShop.Order 
        where
            orderId = ? [42001-193]
2017-04-29 00:20:09 database: wrong user or password; user: ""
org.h2.message.DbException: ユーザ名またはパスワードが不正です
Wrong user name or password [28000-194]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.engine.Engine.openSession(Engine.java:104)
	at org.h2.engine.Engine.openSession(Engine.java:176)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:154)
	at org.h2.engine.Engine.createSession(Engine.java:137)
	at org.h2.engine.Engine.createSession(Engine.java:27)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:354)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:116)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:100)
	at org.h2.Driver.connect(Driver.java:69)
	at org.h2.server.web.WebServer.getConnection(WebServer.java:735)
	at org.h2.server.web.WebApp.test(WebApp.java:885)
	at org.h2.server.web.WebApp.process(WebApp.java:220)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:169)
	at org.h2.server.web.WebThread.process(WebThread.java:133)
	at org.h2.server.web.WebThread.run(WebThread.java:89)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.h2.jdbc.JdbcSQLException: ユーザ名またはパスワードが不正です
Wrong user name or password [28000-194]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 19 more
2017-04-29 00:22:02 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: SQLステートメントに文法エラーがあります "SELECT * FROM WEBSHOP.ORDER[*] "; 期待されるステートメント "identifier"
Syntax error in SQL statement "SELECT * FROM WEBSHOP.ORDER[*] "; expected "identifier"; SQL statement:
select * from WebShop.Order [42001-193]
2017-04-29 00:23:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: SQLステートメントに文法エラーがあります "SELECT * FROM WEBSHOP.ORDER[*]"; 期待されるステートメント "identifier"
Syntax error in SQL statement "SELECT * FROM WEBSHOP.ORDER[*]"; expected "identifier"; SQL statement:
SELECT * FROM WEBSHOP.ORDER [42001-194]
2017-04-29 00:23:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: SQLステートメントに文法エラーがあります "SELECT * FROM WEBSHOP.'ORDER'[*]"; 期待されるステートメント "identifier"
Syntax error in SQL statement "SELECT * FROM WEBSHOP.'ORDER'[*]"; expected "identifier"; SQL statement:
SELECT * FROM WEBSHOP.'ORDER' [42001-194]
2017-04-29 00:23:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: SQLステートメントに文法エラーがあります "SELECT * FROM 'WEBSHOP'[*].'ORDER'"; 期待されるステートメント "identifier"
Syntax error in SQL statement "SELECT * FROM 'WEBSHOP'[*].'ORDER'"; expected "identifier"; SQL statement:
SELECT * FROM 'WEBSHOP'.'ORDER' [42001-194]
2017-04-29 00:23:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: SQLステートメントに文法エラーがあります "SELECT * FROM 'WEBSHOP'[*].""ORDER"""; 期待されるステートメント "identifier"
Syntax error in SQL statement "SELECT * FROM 'WEBSHOP'[*].""ORDER"""; expected "identifier"; SQL statement:
SELECT * FROM 'WEBSHOP'."ORDER" [42001-194]
2017-04-29 00:25:59 database: flush
org.h2.message.DbException: 一般エラー: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/tanikawa/workspace/exceltable/xlgenapp/.data/h2/db.mv.db [1.4.193/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/tanikawa/workspace/exceltable/xlgenapp/.data/h2/db.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.message.DbException.convert(DbException.java:295)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:94)
	at org.h2.mvstore.MVStore.panic(MVStore.java:379)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:362)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2923)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:154)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:99)
	at org.h2.engine.Database.getPageStore(Database.java:2468)
	at org.h2.engine.Database.open(Database.java:695)
	at org.h2.engine.Database.openDatabase(Database.java:273)
	at org.h2.engine.Database.<init>(Database.java:267)
	at org.h2.engine.Engine.openSession(Engine.java:64)
	at org.h2.engine.Engine.openSession(Engine.java:176)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:154)
	at org.h2.engine.Engine.createSession(Engine.java:137)
	at org.h2.engine.Engine.createSession(Engine.java:27)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:349)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:115)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:732)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:664)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:479)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:154)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:46)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:192)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runSchemaScripts(DataSourceInitializer.java:92)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.init(DataSourceInitializer.java:83)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:311)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:134)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1018)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:345)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:340)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerPostProcessor.postProcessAfterInitialization(DataSourceInitializerPostProcessor.java:62)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:423)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1342)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1249)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:866)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at org.xlbean.xlapi.GenApp.main(GenApp.java:22)
Caused by: org.h2.jdbc.JdbcSQLException: 一般エラー: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/tanikawa/workspace/exceltable/xlgenapp/.data/h2/db.mv.db [1.4.193/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/tanikawa/workspace/exceltable/xlgenapp/.data/h2/db.mv.db [1.4.193/7]" [50000-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 124 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:C:/Users/tanikawa/workspace/exceltable/xlgenapp/.data/h2/db.mv.db [1.4.193/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:765)
	at org.h2.mvstore.FileStore.open(FileStore.java:173)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:348)
	... 119 more
